{"meta":{"title":"Yunlin's Blog","subtitle":"","description":"分享技术知识，探讨编程问题，一起成长。","author":"John Doe","url":"http://asd1238525.github.io","root":"/"},"pages":[{"title":"archives","date":"2024-12-01T16:39:22.000Z","updated":"2024-12-01T16:39:24.000Z","comments":true,"path":"archives/index.html","permalink":"http://asd1238525.github.io/archives/index.html","excerpt":"","text":""},{"title":"所有分类","date":"2009-04-22T19:24:48.000Z","updated":"2024-12-01T16:16:32.000Z","comments":true,"path":"categories/index.html","permalink":"http://asd1238525.github.io/categories/index.html","excerpt":"","text":""},{"title":"","date":"2009-04-22T19:24:48.000Z","updated":"2024-12-01T16:15:54.000Z","comments":true,"path":"about/index.html","permalink":"http://asd1238525.github.io/about/index.html","excerpt":"","text":"下面写关于自己的内容"},{"title":"examples","date":"2024-12-01T16:39:02.000Z","updated":"2024-12-01T16:39:04.000Z","comments":true,"path":"examples/index.html","permalink":"http://asd1238525.github.io/examples/index.html","excerpt":"","text":""},{"title":"contributors","date":"2024-12-01T16:42:43.000Z","updated":"2024-12-01T16:42:44.000Z","comments":true,"path":"contributors/index.html","permalink":"http://asd1238525.github.io/contributors/index.html","excerpt":"","text":""},{"title":"我的朋友们","date":"2009-04-22T19:24:48.000Z","updated":"2024-12-02T14:28:54.000Z","comments":true,"path":"friends/index.html","permalink":"http://asd1238525.github.io/friends/index.html","excerpt":"这里写友链上方的内容。","text":"这里写友链上方的内容。 这里可以写友链页面下方的文字备注，例如自己的友链规范、示例等。"},{"title":"faqs","date":"2024-12-01T16:38:47.000Z","updated":"2024-12-01T16:38:50.000Z","comments":true,"path":"faqs/index.html","permalink":"http://asd1238525.github.io/faqs/index.html","excerpt":"","text":""},{"title":"getting-started","date":"2024-12-01T16:44:21.000Z","updated":"2024-12-01T16:44:22.000Z","comments":true,"path":"getting-started/index.html","permalink":"http://asd1238525.github.io/getting-started/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2009-04-22T19:24:48.000Z","updated":"2024-12-01T16:16:46.000Z","comments":true,"path":"tags/index.html","permalink":"http://asd1238525.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"PHP伪协议","slug":"PHP伪协议","date":"2024-12-06T05:25:25.000Z","updated":"2024-12-06T06:10:32.000Z","comments":true,"path":"2024/12/06/PHP伪协议/","permalink":"http://asd1238525.github.io/2024/12/06/PHP%E4%BC%AA%E5%8D%8F%E8%AE%AE/","excerpt":"","text":"1.php:&#x2F;&#x2F;filter语法格式: php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;要编码的文件路径过滤器:read&#x3D;string.toupper PHP5.0.0及以后版本，将数据流转换成「大写」，类似于 strupper() 函数read&#x3D;string.tolower PHP5.0.0及以后版本，将数据流转换成「小写」，类似 strtolower()函数。read&#x3D;string.rot13 PHP4.3.0及以后版本，对数据流的内容进行「rot13编码」，等于用str_rot13() 函数编码。ROT13会把每一个字母替换成13位之后的字母，也就是把a换成n，b换成o，以此类推；如果超过了26个字母的范围，就会从开头重新开始。read&#x3D;convert.base64-encode 对数据流的内容进行「base64编码」，相当于 base64_encode()函数read&#x3D;convert.iconv.utf-8*.utf-16* 意思就是把文件的字符编码从 utf-8* 转换为 utf-16*支持的字符编码有：UCS-4*UCS-4BEUCS-4LE*UCS-2UCS-2BEUCS-2LEUTF-32*UTF-32BE*UTF-32LE*UTF-16*UTF-16BE*UTF-16LE*UTF-7UTF7-IMAPUTF-8*ASCII*EUC-JP*SJIS*eucJP-win*SJIS-win*ISO-2022-JPISO-2022-JP-MSCP932CP51932SJIS-mac (alias: MacJapanese)SJIS-Mobile#DOCOMO (alias: SJIS-DOCOMO)SJIS-Mobile#KDDI (alias: SJIS-KDDI)SJIS-Mobile#SOFTBANK (alias: SJIS-SOFTBANK)UTF-8-Mobile#DOCOMO (alias: UTF-8-DOCOMO)UTF-8-Mobile#KDDI-AUTF-8-Mobile#KDDI-B (alias: UTF-8-KDDI)UTF-8-Mobile#SOFTBANK (alias: UTF-8-SOFTBANK)ISO-2022-JP-MOBILE#KDDI (alias: ISO-2022-JP-KDDI)JISJIS-msCP50220CP50220rawCP50221CP50222ISO-8859-1*ISO-8859-2*ISO-8859-3*ISO-8859-4*ISO-8859-5*ISO-8859-6*ISO-8859-7*ISO-8859-8*ISO-8859-9*ISO-8859-10*ISO-8859-13*ISO-8859-14*ISO-8859-15*ISO-8859-16*byte2bebyte2lebyte4bebyte4leBASE64HTML-ENTITIES (alias: HTML)7bit8bitEUC-CN*CP936GB18030HZEUC-TW*CP950BIG-5*EUC-KR*UHC (alias: CP949)ISO-2022-KRWindows-1251 (alias: CP1251)Windows-1252 (alias: CP1252)CP866 (alias: IBM866)KOI8-R*KOI8-U*ArmSCII-8 (alias: ArmSCII8)2.php:&#x2F;&#x2F;input访问请求的原始数据的只读流，将post请求的数据当作php代码执行。当传入的参数作为文件名打开时，可以将参数设为php:&#x2F;&#x2F;input,同时post想设置的文件内容，php执行时会将post内容当作文件内容。从而导致任意代码执行,遇到file_get_contents()要想到用php:&#x2F;&#x2F;input绕过。3.data:&#x2F;&#x2F;示例用法：data:&#x2F;&#x2F;text&#x2F;plain,http://127.0.0.1/include.php?file=data://text/plain,data:&#x2F;&#x2F;text&#x2F;plain;base64,http://127.0.0.1/include.php?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b4.file:&#x2F;&#x2F;用于访问本地文件系统，并且不受allow_url_fopen，allow_url_include影响file:&#x2F;&#x2F;协议主要用于访问文件(绝对路径、相对路径以及网络路径)比如：http://www.xx.com?file=file:///etc/passsword5.zip:&#x2F;&#x2F;zip:&#x2F;&#x2F; 可以访问压缩包里面的文件。当它与包含函数结合时，zip:&#x2F;&#x2F;流会被当作php文件执行。从而实现任意代码执行。zip:&#x2F;&#x2F;中只能传入绝对路径。","categories":[{"name":"PHP","slug":"PHP","permalink":"http://asd1238525.github.io/categories/PHP/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"http://asd1238525.github.io/tags/CTF/"}]},{"title":"SQL","slug":"SQL","date":"2024-12-03T14:18:31.000Z","updated":"2024-12-04T06:35:40.000Z","comments":true,"path":"2024/12/03/SQL/","permalink":"http://asd1238525.github.io/2024/12/03/SQL/","excerpt":"","text":"1.函数length():计算字符串的长度substr(string, start, length):截取字符串ASCII():返回字符串最左边字符的数值,若为空字符串则返回0,若为null则返回null,与substr可以配合使用sleep():暂停指定的时间rename:例将word表名改为word1,则rename tables word to word1; (字符串为表名操作时要加反引号)concat(string1, string2, string3…):连接多个字符串2.基本做题流程首先判断闭合点有’,”,),’),”)等等,再通过xxx order by 3 –+(注意有时候用#) 假设有三个注入点,当输入4时就会报错,接下来就可以通过堆叠注入,联合注入,二次注入等等方法进行攻击,最后通过报错信息分析注入点,进行绕过3.联合注入xxx union select 1,2,3 –+xxx union select 1,2,database() –+ 爆库,假设database()&#x3D;sqlixxx union select 1,2,(group_concat(table_name) from information_schema.tables where table_schema&#x3D;’sqli’)–+ 爆表,假设两个表名,user,asdfxxx union select 1,2,(select group_concat(column_name) from information_schema.columns where table_name&#x3D;’user’)–+ 爆列,假设user表有两个列名,id,passwordxxx union select 1,group_concat(id),group_concat(password) from sqli.user –+ 爆数据4.堆叠注入sql语句以;结尾,堆叠注入原理就是通过结束符同时执行多条sql语句(前提存在sql漏洞,;没有被过滤,只有当调用数据库函数支持执行多条sql语句时才能够使用)xxx;show databases;–+ 爆数据库xxx;show tables;–+ 爆表xxx;show columns from user;–+ 爆列xxx;select * from user;–+ 爆数据5.万能密码【数值型万能账号】1 or 1&#x3D;1 # 万能密码,会直接登录成功,但不具有任何权限,适用于弱口令爆破【单引号字符型万能密码】1’ or 1&#x3D;1 #【双引号字符型万能密码】1” or 1&#x3D;1 # ………………………….","categories":[],"tags":[]},{"title":"Misc编码总结","slug":"Misc编码总结","date":"2024-12-03T13:49:08.000Z","updated":"2024-12-06T05:27:46.000Z","comments":true,"path":"2024/12/03/Misc编码总结/","permalink":"http://asd1238525.github.io/2024/12/03/Misc%E7%BC%96%E7%A0%81%E6%80%BB%E7%BB%93/","excerpt":"","text":"1.编码一般以&#x3D;&#x2F;&#x3D;&#x3D;结尾的一般是base64编码,如果是以&#x3D;开头的可以尝试将其反转再解码2.解码结果若是像flag{xxx}这样的格式,大概率是凯撒加密3.工具可以使用随波逐流,Cyberchef,在线解密网站等……………………..","categories":[],"tags":[{"name":"CTF","slug":"CTF","permalink":"http://asd1238525.github.io/tags/CTF/"}]},{"title":"HTTP","slug":"HTTP","date":"2024-12-03T13:35:11.000Z","updated":"2024-12-06T05:31:04.000Z","comments":true,"path":"2024/12/03/HTTP/","permalink":"http://asd1238525.github.io/2024/12/03/HTTP/","excerpt":"","text":"1.请求方式GET：请求指定的页面信息，并返回实体内容,直接在url中发送。POST：向指定资源提交数据进行处理请求，如提交表单或者上传文件。2.服务端与客户端客户端：浏览器、手机App、爬虫、模拟工具等服务端：Web服务器、应用程序服务器、数据库服务器等3.请求头Host: 告知服务器请求的主机名和端口号User-Agent: 告知服务器客户端的类型、操作系统及版本、浏览器及版本等信息Accepet: 告知服务器客户端可接受的内容类型Content-Type: 告知服务器请求的数据类型及编码格式Referer: 告知服务器当前请求的来源地址Cookie: 告知服务器客户端的状态信息4.响应头Status: 响应状态码Content-Type: 响应数据的类型及编码格式Content-Length: 响应数据的长度Date: 响应时间Server: 服务器的类型及版本Set-Cookie: 向浏览器发送Cookie,随后浏览器返还给服务器5.HTTP和HTTPS两种本质是一样的,但http是明文传输,https是加密传输。6.常见url编码%20:表示空格%00:表示空字符%25:表示%%0a:表示换行符%3d:表示&#x3D;","categories":[{"name":"CTF","slug":"CTF","permalink":"http://asd1238525.github.io/categories/CTF/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"http://asd1238525.github.io/tags/CTF/"}],"author":"Murphy"},{"title":"PHP速成","slug":"PHP速成","date":"2024-12-02T10:22:11.000Z","updated":"2024-12-06T05:31:06.000Z","comments":true,"path":"2024/12/02/PHP速成/","permalink":"http://asd1238525.github.io/2024/12/02/PHP%E9%80%9F%E6%88%90/","excerpt":"","text":"编程语言大多数都有共通的基础语法，比如变量、数据类型、运算符、控制结构等。而PHP也不例外，下面就让我们一起快速了解PHP的基础语法。 变量$变量名 &#x3D; 值;变量名可以是字母、数字、下划线组成，但不能以数字开头。属于动态类型，可以赋不同类型的值。 数据类型PHP有以下几种数据类型： 整型：int 浮点型：float、double 字符串型：string 布尔型：boolean 数组型：array 运算符 算术运算符：+、-、*、&#x2F;、% 赋值运算符：&#x3D;、+&#x3D;、-&#x3D;、*&#x3D;、&#x2F;&#x3D;、%&#x3D; 比较运算符：&#x3D;&#x3D;、!&#x3D;、&gt;、&lt;、&gt;&#x3D;、&lt;&#x3D; 逻辑运算符：&amp;&amp;、||、! 位运算符：&amp;、|、^、~、&lt;&lt;、&gt;&gt; 控制结构 if语句：if(条件){执行的代码} if…else语句：if(条件){执行的代码}else{执行的代码} if…elseif…else语句：if(条件1){执行的代码1}elseif(条件2){执行的代码2}else{执行的代码3} switch语句：switch(表达式){case 值1:执行的代码1;break;case 值2:执行的代码2;break;default:执行的代码3;} for语句：for(初始化;条件;递增){执行的代码} while语句：while(条件){执行的代码} do…while语句：do{执行的代码}while(条件); foreach语句：foreach(数组 as 变量){执行的代码} 例: foreach($arr as $value){echo $value;} break语句：用于跳出循环 continue语句：用于跳过当前循环，直接进入下一次循环5.类与对象 类：class 类名{属性和方法} 对象：$对象名 &#x3D; new 类名();(要接收类的属性,要先创建对象,然后用-&gt;来访问属性。例: $obj-&gt;属性名) 属性:大概意思是一只猫的颜色、大小、品种等。还分为公有属性,私有属性,和受保护属性。例如：$router &#x3D; new Router();$router-&gt;new(‘GET’, ‘&#x2F;‘, ‘TimeController@index’); #注意代码不完整截取一部分,应该有一个Router的类这里没写出来,只做演示。这里有两个new,但意义完全不一样,第一个new是创建了一个对象,第二个new是调用了类的构造函数,创建了一个对象并初始化了属性,容易混淆。6. 函数(感觉函数这块编程语言都比较相似大概意思差不多,但具体用起来还是有点区别) 函数：function 函数名($参数1,$参数2,$参数3){函数体} 参数：可以有0个或多个参数，参数可以有默认值。 返回值：函数可以有返回值，返回值可以是任何类型。 全局变量：函数内声明的变量，默认是局部变量，可以在函数外使用。 引用传递：函数传递的参数是引用传递，可以修改函数外的变量的值。 匿名函数：可以把函数作为参数传递给其他函数，也可以作为函数的返回值。","categories":[{"name":"PHP","slug":"PHP","permalink":"http://asd1238525.github.io/categories/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"http://asd1238525.github.io/tags/PHP/"}]},{"title":"Linux指令","slug":"Linux指令","date":"2024-12-02T10:06:31.000Z","updated":"2024-12-06T05:27:48.000Z","comments":true,"path":"2024/12/02/Linux指令/","permalink":"http://asd1238525.github.io/2024/12/02/Linux%E6%8C%87%E4%BB%A4/","excerpt":"","text":"windows有盘符，linux没有，都是以目录树的形式存储文件。用户分为:普通用户,管理员用户,超级用户。普通用户:只能使用自己的目录,不能使用管理员权限的命令。管理员用户:可以管理系统中的所有文件,可以执行所有命令。超级用户:拥有最高权限,可以执行任何命令。常用命令：sudo：以超级用户权限运行命令su：切换用户whoami：显示当前用户~：表示当前用户的主目录(家目录)pwd：显示当前工作目录cd：切换目录cd ..：返回上级目录cd &#x2F;：切换到根目录ls：显示目录内容-l 显示详细信息 -a 显示隐藏文件 -d 仅显示目录 -h 以易读方式显示文件大小 -R 递归显示目录下所有文件 -r 逆序显示文件touch：创建文件mkdir：创建目录cat：查看文件内容rm：删除文件或目录cp：复制文件或目录mv：移动文件或目录find：查找文件或目录 例:find &#x2F; -name “文件名”grep:搜索文件内容(与|管道命令配合使用) 例:cat file.txt | grep “关键字”man：查看命令帮助vim：编辑文件 (w写入，q退出，i进入编辑模式，esc退出编辑模式)chomd：修改文件权限 例:chomd 777 file.txtfile:可以看文件简介xxd:查看二进制文件内容foremost:恢复被删除文件","categories":[],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://asd1238525.github.io/tags/Linux/"}]}],"categories":[{"name":"PHP","slug":"PHP","permalink":"http://asd1238525.github.io/categories/PHP/"},{"name":"CTF","slug":"CTF","permalink":"http://asd1238525.github.io/categories/CTF/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"http://asd1238525.github.io/tags/CTF/"},{"name":"PHP","slug":"PHP","permalink":"http://asd1238525.github.io/tags/PHP/"},{"name":"Linux","slug":"Linux","permalink":"http://asd1238525.github.io/tags/Linux/"}]}